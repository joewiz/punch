<?xml version="1.0" encoding="UTF-8"?>
<collection xmlns="http://exist-db.org/collection-config/1.0">
    
    <!-- 
        This file contains the index configuration for the Punch TEI files.
        It sets up indexes on commonly queried elements and attributes.
        Range indexes on attributes like @type make queries like //div[@type = 'snippet'] very quick.
        Lucene indexes on elements like div make queries like //div[ft:query(., 'London')] very quick.
    -->
    <index xmlns:tei="http://www.tei-c.org/ns/1.0">
        
        <!-- Full text index configuration -->
        <!-- Disable the standard full text index -->
        <fulltext default="none" attributes="false"/>
        
        <!-- Range index configuration -->
        <create qname="@type" type="xs:string"/>
        <create qname="@xml:id" type="xs:string"/>
        <create qname="@id" type="xs:string"/>
        <create qname="@rend" type="xs:string"/>
        <create qname="tei:idno" type="xs:string"/>
        <!-- Note on @xml:id: When using the dedicated fn:id() 
            function, eXist will use its default xml:id index, 
            so you don't need an extra index. However, if you use 
            a general comparison as in //node[@xml:id = 'abc'], then 
            an additional range index will be required -->
        <!--create qname="@when" type="xs:date"/-->
        <!-- Note on @when: "eXist can only use a range index 
            if all values within that index are valid instances 
            of the defined index type. So every date has to be 
            an xs:date and if there's just one exception, the 
            index will no longer be used."  Until we've normalized
            our dates, there's no point in using this range index. -->
        
        <!-- Ngram index configuration -->
        <!-- Note: the ngram index is only used by 
            dedicated functions in the ngram module:
            ngram:contains(), ends-with(), filter-matches(), 
            and starts-with().  According to Wolfgang,
            ngram:contains is faster if you need contains() 
            or ends-with().  So for now I'm commenting these out.
        -->
        <!-- 
            <ngram qname="tei:title"/>
            <ngram qname="@type"/>
        -->
        
        <!-- Lucene index configuration -->
        <!-- attribute boost can be used to give matches in the
            collection a higher score. It can also be specified on a
            single index definition. -->
        <lucene boost="1.0">
		    <!-- The standard analyzer will ignore stopwords like 'the', 'and' -->
            <analyzer class="org.apache.lucene.analysis.standard.StandardAnalyzer"/>
		    <!-- Whitespace analyzer includes stopwords -->
            <!--analyzer class="org.apache.lucene.analysis.WhitespaceAnalyzer"/-->
            <text qname="tei:div"/>
            <text qname="tei:l"/>
            <text qname="tei:lg"/>
        </lucene>
    </index>
</collection>